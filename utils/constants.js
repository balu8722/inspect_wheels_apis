module.exports.CONSTANTS = {
  // api end points
  API_END_POINTS: {
    AUTH: {
      SIGNUP: "/signup",
      SIGNIN: "/signin",
      VERIFY_SIGNUP_OTP: "/verifysignupotp",
      VERIFY_LOGIN_OTP: "/verifyloginotp",
      VERIFY_FORGOT_OTP: "/verifyforgototp",
      FORGOT_PASSWORD: "/forgotpassword",
      RESET_PASSWORD: "/resetpassword",
      CHANGE_PASSWORD: "/changepassword",
      REFRESH_TOKEN: "/refreshtoken/:refreshtoken",
      USER_LIST: "/userslist",
      USER_DETAILS_BY_ID: "/userlist/:id",
      DELETE_USER: "/delete/:userId",
      UPDATE_USER: "/updateDetailbyid/:userId",

      // roles
      CREATE_ROLE: "/role/create",
      UPDATE_ROLE: "/role/update/:roleId",
      GET_ROLE: "/role/list",
      DELETE_ROLE: "/role/delete/:roleId/:updatedBy",
    },
    RO: {
      CREATE_RO: "/create",
      UPDATE_RO: "/update/:id",
      GET_RO_LIST: "/list",
      GET_RO_BY_ID: "/list/:id",
      DELETE_RO_BY_ID: "/delete/:id/:updatedBy"
    },
  },

  //  api payloads
  API_PAYLOADS: {},

  // show messages
  STATUS_MSG: {
    SUCCESS: {
      LOGIN: "Login successful!",
      DATADDED: "Data added successfully",
      DATA_UPDATED: "Data updated successfully",
      DATA_FOUND: "data found",
      DATA_NOT_FOUND: "data not found",
      DATA_DELETED: "data deleted",
      ADMIN_REGISTERED:
        "User registered successfully, Account Credentials sent to the user through Email",
      USER_REGISTERED: "User registered successfully",
      FORGET_TOKEN_GENERATED:
        "Reset password token sent to your Email, please check your Email",
      RESET_PASS: "Password Resetted successfully",
      PASSWORD_CHANGED: "Password Changed successfully",
      LOGIN_OTP_EMAIL_SENT: "Login OTP sent to your email",
      SIGNUP_OTP_EMAIL_SENT:
        "An OTP has been sent to your registered email address for verification",
      FORGOT_OTP_MAIL: "OTP for reset password is sent to your Email",
      OTP_VERIFIED: "OTP verified successfully",
      USER_DELETED: "User deleted successfully",
      ADMIN_DELETED: "Admin deleted successfully",
      TOKEN_GENERATED: "Token regenerated",
      ROLE_CREATED: "Role created successfully",
      ROLE_UPDATED: "Role updated successfully",
      ROLE_DELETED: "Role deleted successfully",
      CATEGORY_CREATED: "Hospital category created",
      CATEGORY_UPDATED: "Hospital category updated",
      CATEGORY_DELETED: "Hospital category deleted successfully",
      SPECIALIZATION_CREATED: "Hospital specialization created",
      SPECIALIZATION_UPDATED: "Hospital specialization updated",
      SPECIALIZATION_DELETED: "Hospital specialization deleted successfully",
      HOSPITAL_CREATED:
        "Hospital added suceessfully and credentials sent registered mail",
      HOSPITAL_UPDATED: "Hospital updated suceessfully",
      HOSPITAL_UPDATED_EMAIL:
        "Hospital updated suceessfully and new credentials sent registered mail",
      HOSPITAL_DELETED: "Hospital deleted suceessfully",
      HOSPITAL_OFFER_CREATED: "new offer created",
      HOSPITAL_OFFER_UPDATED: "hospital offer updated",
      HOSPITAL_OFFER_DELETED: "hospital offer deleted",
      LAB_PARAMETER_CREATED: "Lab test created successfully",
      LAB_PARAMETER_UPDATED: "Lab test updated successfully",
      LAB_PARAMETER_DELETED: "Lab test deleted successfully",
      LAB_PACKAGE_CREATED: "Lab package created",
      LAB_PACKAGE_UPDATED: "Lab package updated",
      LAB_PACKAGE_DELETED: "Lab package deleted",
      LAB_CREATED:
        "LAB added suceessfully and credentials sent registered mail",
      LAB_UPDATED: "LAB updated suceessfully",
      LAB_UPDATED_EMAIL:
        "LAB updated suceessfully and new credentials sent registered mail",
      LAB_DELETED: "LAB deleted suceessfully",
      USER_CREATED: "User created",
      USERS_CREATED: "Users created successfully",
      ORG_CREATED: "Organization created",
      ORG_UPDATED: "Organization updated",
      ORG_DELETED: "Organization deleted",
      CART_ADDED: "Item added to the cart.",
      CART_ITEM_DELETED: "Cart item deleted",
      // j378 start
      ORDER_CREATED: "Your order created successfuly.",
      // j378 ends

      REVIEW_ADDED: "review added successfully",
      REVIEW_UPDATED: "review updated successfully",
      REVIEW_DELETED: "review deleted successfully",
      STATUS_UPDATED: "Status updated successfuly.",
      LAB_ASSISTENT_CREATED: "Lab assistent created.",
      LAB_ASSISTENT_UPDATED: "Lab assistent updated.",
      LAB_ASSISTENT_DELETED: "Lab assistent deleted.",
      TEST_READINGS_ADDED: "Test results added",
      PROFILE_IMG_UPLOADED: "Profile updated successfully",
      LAB_ASSIGNED: "Lab assigned for order successfuly",
      TRANSACTION_UPDATED: "Transaction status updated",

      FAQ_ADDED: "Faq added successfully",
      FAQ_UPDATED: "Faq updated successfully",
      FAQ_DELETED: "Faq deleted successfully",

      HEALTHCARD_CREATED: "Healthcard created successfully",
      HEALTHCARD_UPDATED: "Healthcard updated successfully",

      HEALTH_CARD_USER_CREATED_PENDING:
        "Healthcard created,Pending for Payment",
      HEALTH_CARD_USER_CREATED: "Payment details are updated",
      PHONE_NUMBER_VALIDATION: "Healthcard is not created on this PhoneNumber",
      CARD_SHIFTED: "Healthcard shifted successfully",

      RAZOR_ID_CREATED: "razorpaymentid created for the renewal",
      HEALTHCARD_RENEWED: "helathcard renew payments updated",

      REDEEM_DETAILS_UPDATED: "Redeem points details updated",

      ADS_CREATED: "Ads created sucessfully",
      ADS_UPDATED: "Ads updated sucessfully",
      ADS_DELETED: "Ads deleted sucessfully",

      FCM_UPDATED: "FCM token updated",
      NOTIFICATION_CREATED: "Notification created sucessfully",
      NOTIFICATION_UPDATED: "Notification updated sucessfully",
      NOTIFICATION_DELETED: "Notification deleted sucessfully",
    },
    ERROR: {
      LOGIN: "sign-in failed",
      SERVER: "Internal server error",
      USER_NOT_FOUND: "User not Found",
      ADMIN_NOT_FOUND: "Admin not Found",
      INVALID_PASSWORD: "Password entered is Invalid",
      NO_DATA_FOUND: "No data found",
      ENTER_VALID_ID: "Enter Valid data Id",
      ROLE_NAME_EXISTS: "The role name already exists",
      ROLE_NAME_REQUIRED: "Role name Required",
      UNAUTHORIZED: "Unauthorized",
      TOKEN_EXPIRED: "Token expired",
      // autherrors
      GENDER_ERROR: "Gendre should be male or female or Other",
      VALID_PHONE: "Enter valid Phone Number",
      EMAIL_EXISTS: "Email Address already exists",
      PHONE_NO_EXISTS: "Phone number already exists",
      VALID_EMAIL: "Please enter valid email",
      NEW_AND_CONFIRM: "New password and Confirm password should be same",
      RESET_TOKEN_EXPIRED: "Reset Token expired",
      INVALID_CURRENT_PASS: "Invalid Current Password",
      INVALID_OTP: "Entered OTP is Invalid",
      OTP_EXPIRED: "OTP has expired",
      OLD_NEW_PASSWORD: "New password is same as old password",
      INVALID_CURRENT_PASSWORD: "Invalid current password",
      IS_TRUE_FALSE: "Provide boolean values for isAdmin",
      PASSWORD_INVALID:
        "password must contain minimum of 8 characters,1 uppercase, 1 lowercase,1 number and a special character",
      NAME_FIELD: "Please enter only letters for the Name",
      NUMBERS_ONLY: "Numbers only",
      ROLENAME_EXISTS: "Role name already exists",
      CATEGORYNAME_EXISTS: "Hospital category name already exists",
      SPECIALIZATIONNAME_EXISTS: "Hospital specialization name already exists",
      ROLE_NOT_FUND: "Role not found",
      HOSPITAL_NOT_FUND: "hospital not found",
      CATEGORY_NOT_FUND: "Hospital category not found",
      SPECIALIZATION_NOT_FUND: "Hospital specialzation not found",
      ID_NUMBER_ONLY: "id must be number only",
      HOSPITAL_OFFER_NOT_FOUND: "hospital offer not found with the request Id",
      PARAMETER_NOT_FOUND: "Lab test not found with the request Id",
      HOSPITAL_OFFERTITLE_EXISTS: "offertitle already exists",
      DUPLICATE_PARAMETER_NAMES: "Duplicate lab test names exusts",
      PARAMETERNAME_EXISTS: "Lab test name already exists",
      LAB_PACKAGE_EXISTS: "testtitle already exists",
      DUPLICATE_TESTHEADERS_NAMES: "Duplicate testheaders exists",
      PACKAGE_NOT_FOUND: "test package not found with the request id",
      LAB_NOT_FUND: "lab not found with the request Id",
      DUPLICATE_USER_NAME: "Duplicate user names exists",
      DUPLICATE_USER_EMAIL: "Duplicate user email exists",
      DUPLICATE_USER_EMAIL_DB: "Email already added",
      ORGANIZATION_EXISTS: "Organization already added",
      INVALID_ORG_ID: "Invalid organization ID.",
      ALREADY_IN_CART: "Item already added to the cart",
      ITEM_NOT_FOUND: "item not found",
      CART_ITEM_NOT_FOUND:
        "The item you are trying to delete is not in your cart",
      EMPTY_CART: "No items found in the cart",
      PAGE_LIMIT_NUMBER_ONLY: "pagenumber or limit must be number type",
      LABTEST_NAME_REQUIRED: "Labtest name is required",
      HISPITAL_NAME_REQUIRED: "Hospital name is required",
      NOT_AUTHORIZED: "Not authorized to remove this data",
      REVIEW_NOT_FOUND: "Review id is not found",

      // j378 start
      VALID_DATE: "Date is not accepted, select valid date",
      SLOT_NOT_AVAILABLE:
        "This slot is not available, please select valid slot",
      INVALID_SLOT: "Invalid slot, please select valid slot",
      NO_TESTS_ADDED: "No tests added",
      DUBLICATE_TEST: "Duplicate tests are not allowed.",
      INVALID_ID: "Invalid id.",
      ORDER_NOT_FOUND: "Order not found.",
      LABASSISTENT_NOT_FOUND: "Lab assistent not found.",
      MISSING_TEST_READING: "All test parameter not passed",
      INVALID_TEST_PARAMETER: "Invalid test parameter",
      INVALID_TEST_HEADER: "Invalid test header",
      ORDER_ALREADY_ASSIGNED: "Order is already assigned to other lab already.",
      LABASSISTENTREQUIRED: "Lab assistent required.",
      GREATER_THAN_ZERO: "Parameter value must be greater than zaro.",
      PACKAGE_ID_REQUIRED: "Please enter the testpackage id",
      TRANSACTION_ID_REQUIRED: "Please enter the valid transaction id",
      LAB_ID_NOTFOUND: "Entered id does not exist",
      CGST_REQUIRED: "CGST is required",
      SGST_REQUIRED: "SGST is required",
      IGST_REQUIRED: "IGST is required",
      TEST_READING_ALREADY_ADDED: "Test reading is already added to this order",
      // j378 start

      IMAGE_REQUIRED: "Image is Required",
      FAQ_NOT_FOUND: "Faq not found with request id",

      HEALTH_CAD_PHONE_EXISTS: "Healthcard already created on this PhoneNumber",
      PHONE_NUMBER_VALIDATION:
        "PhoneNumber must contain only numbers and be exactly 10 digits",
      CANNOT_SHIFT_SAME_USER: "cannot shift your healthcard to others",
      ALREADY_CARD_SHIFTED: "Healthcard already shifted",
      UID_NOT_FOUND: "UID not found",
      ASSISTENTNOTASSIGNED: "Assistent not assigned yet to this order",
      SAMPLENOTCOLLECTED: "Sample was not collected yet to this order",
      SAMPLENOTREACHED: "Sample was not reached lab yet for this order.",
      CANTUPDATESTATUS: "Cant update status for this order.",
      PAYMENT_ALREADY_MADE: "Payment for this card is completed",
      MORE_REDEEMPOINTS:
        "Redeem points are morethan the remaining rewards points",
      ADSTITLEFOUND: "Ads title already exists.",
      ADS_CONTENT_REQUIRED: "Ads content is required.",
      ADS_NOT_FOUND: "App ads not found",
      CARD_PAYMENT_PENDING: "Healthcard payment is pending",
      INVALID_SCREENS: "Please provide valid screens value - home, my reward.",

      // doctors
      DR_REGISTER_EXISTS: "Doctors register number already exists",
      PINCODESREQUIRED: "Pincode is required.",
      AGEFROMREQUIRED: "Age from is required.",
      AGETOREQUIRED: "Age to is required.",
      SCHEDULEONREQUIRED: "Scheduled on is required.",
      DUPLICATE_PHONENUMBER_EXISTS: "duplicate phoneNumber exists",
      INVALID_DATE: "Scheduled date must be future date.",
      CANTEDITNOTIFICATION: "You can't edit instant notifications",
      NOT_ALLOWED: "Not allowed to delete instant notification",
      NOTALLOWEDTODELETE:
        "Not allowed to delete aleready sent scheduled notification",
    },
  },

  // data table names
  DATA_TABLES: {
    ROLE: "role",
    USERS: "users",
    RO: "reasonanalofficer"
  },
};
